def unboundedKnapsack(k, arr):
    dp = [0] * (k + 1)
    for i in range(1, k + 1):
        for item in arr:
            if item <= i:
                dp[i] = max(dp[i], dp[i - item] + item)
    
    return dp[k]
def main():
    import sys
    input = sys.stdin.read
    data = input().split()
    
    index = 0
    t = int(data[index])
    index += 1
    
    results = []
    for _ in range(t):
        n = int(data[index])
        k = int(data[index + 1])
        index += 2
        arr = list(map(int, data[index:index + n]))
        index += n
        results.append(unboundedKnapsack(k, arr))
    
    for result in results:
        print(result)

# Call the main function
if __name__ == "__main__":
    main()
